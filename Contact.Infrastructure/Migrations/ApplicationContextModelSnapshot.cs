// <auto-generated />
using System;
using Contact.Infrastructure.Contracts.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Contact.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.BilgiTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Ad" }, "IX_Ad");

                    b.ToTable("BilgiTip");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.Kisi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Firma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Ad", "Soyad" }, "IX_Ad_Soyad");

                    b.ToTable("Kisi");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.KisiIletisim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BilgiTipId")
                        .HasColumnType("integer");

                    b.Property<string>("Deger")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("KisiId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("KisiId");

                    b.HasIndex(new[] { "BilgiTipId", "KisiId" }, "UIX_BilgiTipId_KisiId")
                        .IsUnique();

                    b.ToTable("KisiIletisim");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.KisiIletisim", b =>
                {
                    b.HasOne("Contact.Domain.Entities.Contacts.BilgiTip", "BilgiTip")
                        .WithMany("KisiIletisims")
                        .HasForeignKey("BilgiTipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Contact.Domain.Entities.Contacts.Kisi", "Kisi")
                        .WithMany("KisiIletisims")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BilgiTip");

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.BilgiTip", b =>
                {
                    b.Navigation("KisiIletisims");
                });

            modelBuilder.Entity("Contact.Domain.Entities.Contacts.Kisi", b =>
                {
                    b.Navigation("KisiIletisims");
                });
#pragma warning restore 612, 618
        }
    }
}
